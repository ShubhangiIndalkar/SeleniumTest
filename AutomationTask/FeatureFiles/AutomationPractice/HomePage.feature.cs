// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutomationTask.FeatureFiles.AutomationPractice
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("HomePage", SourceFile="FeatureFiles\\AutomationPractice\\HomePage.feature", SourceLine=0)]
    public partial class HomePageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HomePage.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HomePage", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
    testRunner.Given("I open AutomationPractice site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Checked Menu\'s on Home Page", new string[] {
                "TestCase1"}, SourceLine=6)]
        public virtual void CheckedMenusOnHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Checked Menu\'s on Home Page", new string[] {
                        "TestCase1"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 8
 testRunner.Then("I am able to view the menu \'WOMEN\' , \'DRESSES\' and \'T-SHIRTS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to see \"Contact Us\" tooltip on Contact us button", new string[] {
                "TestCase11"}, SourceLine=16)]
        public virtual void ShouldBeAbleToSeeContactUsTooltipOnContactUsButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to see \"Contact Us\" tooltip on Contact us button", new string[] {
                        "TestCase11"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 18
 testRunner.Then("I am able to view tooltip \'Contact Us\' on \'Contact us\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to see \"Women\" tooltip on Women menu", new string[] {
                "TestCase12"}, SourceLine=20)]
        public virtual void ShouldBeAbleToSeeWomenTooltipOnWomenMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to see \"Women\" tooltip on Women menu", new string[] {
                        "TestCase12"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 22
 testRunner.Then("I am able to view tooltip \'Women\' on \'WOMEN\' menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to see \"Dresses\" tooltip on Dresses menu", new string[] {
                "TestCase13"}, SourceLine=24)]
        public virtual void ShouldBeAbleToSeeDressesTooltipOnDressesMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to see \"Dresses\" tooltip on Dresses menu", new string[] {
                        "TestCase13"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 26
 testRunner.Then("I am able to view tooltip \'Dresses\' on \'Dresses\' menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to see \"T-shirts\" tooltip on T-shirts menu", new string[] {
                "TestCase13"}, SourceLine=28)]
        public virtual void ShouldBeAbleToSeeT_ShirtsTooltipOnT_ShirtsMenu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to see \"T-shirts\" tooltip on T-shirts menu", new string[] {
                        "TestCase13"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 30
 testRunner.Then("I am able to view tooltip \'T-shirts\' on \'T-shirts\' menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to see \"Log in to your customer account\" tooltip on Sign in button" +
            "", new string[] {
                "TestCase14"}, SourceLine=32)]
        public virtual void ShouldBeAbleToSeeLogInToYourCustomerAccountTooltipOnSignInButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to see \"Log in to your customer account\" tooltip on Sign in button" +
                    "", new string[] {
                        "TestCase14"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 34
 testRunner.Then("I am able to view tooltip \'Log in to your customer account\' on \'Sign in\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to see \"View my shopping cart\" tooltip on Cart button", new string[] {
                "TestCase15"}, SourceLine=36)]
        public virtual void ShouldBeAbleToSeeViewMyShoppingCartTooltipOnCartButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to see \"View my shopping cart\" tooltip on Cart button", new string[] {
                        "TestCase15"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 38
 testRunner.Then("I am able to view tooltip \'View my shopping cart\' on \'Cart\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view \'Add to Cart\' and \'More\' button when mouse over on product" +
            "", new string[] {
                "TestCase16"}, SourceLine=40)]
        public virtual void ShouldBeAbleToViewAddToCartAndMoreButtonWhenMouseOverOnProduct()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view \'Add to Cart\' and \'More\' button when mouse over on product" +
                    "", new string[] {
                        "TestCase16"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 42
 testRunner.When("I mouse over on product \'Faded Short Sleeve T-shirts\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("I am able to view \'Add to cart\' and \'More\' button on product \'Faded Short Sleeve " +
                    "T-shirts\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
