// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutomationTask.FeatureFiles.AutomationPractice
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("SignInPage", SourceFile="FeatureFiles\\AutomationPractice\\SignInPage.feature", SourceLine=0)]
    public partial class SignInPageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SignInPage.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SignInPage", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
    testRunner.Given("I open AutomationPractice site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
 testRunner.And("I click on \'Sign in\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view Login page when you click on Contact Us", new string[] {
                "TestCase1"}, SourceLine=7)]
        public virtual void ShouldBeAbleToViewLoginPageWhenYouClickOnContactUs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view Login page when you click on Contact Us", new string[] {
                        "TestCase1"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 9
 testRunner.Then("I am able to view the \'Sign in\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view Sign in title as \"Login - My Store\"", new string[] {
                "TestCase2"}, SourceLine=11)]
        public virtual void ShouldBeAbleToViewSignInTitleAsLogin_MyStore()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view Sign in title as \"Login - My Store\"", new string[] {
                        "TestCase2"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 13
 testRunner.Then("I am able to view the Sign in page title as \'Login - My Store\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view Error message when you click on Create an account button w" +
            "ithout enter email address", new string[] {
                "TestCase3"}, SourceLine=15)]
        public virtual void ShouldBeAbleToViewErrorMessageWhenYouClickOnCreateAnAccountButtonWithoutEnterEmailAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view Error message when you click on Create an account button w" +
                    "ithout enter email address", new string[] {
                        "TestCase3"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 17
   testRunner.When("I click on \'Create an account\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
   testRunner.Then("I am able to view the Error message as \'Invalid email address.\' on \'Create an acc" +
                    "ount\' form of Sign in page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view Error message when you click on Sign in button without ent" +
            "er email address", new string[] {
                "TestCase4"}, SourceLine=20)]
        public virtual void ShouldBeAbleToViewErrorMessageWhenYouClickOnSignInButtonWithoutEnterEmailAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view Error message when you click on Sign in button without ent" +
                    "er email address", new string[] {
                        "TestCase4"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 22
   testRunner.When("I click on \'Sign in for already register user\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
   testRunner.Then("I am able to view the Error message as \'An email address required.\' on \'Sign in\' " +
                    "page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view Error message when you enter email id which is already exi" +
            "st", new string[] {
                "TestCase5"}, SourceLine=25)]
        public virtual void ShouldBeAbleToViewErrorMessageWhenYouEnterEmailIdWhichIsAlreadyExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view Error message when you enter email id which is already exi" +
                    "st", new string[] {
                        "TestCase5"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 27
   testRunner.When("I enter \'email id\' as \'abc@g.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
   testRunner.And("I click on \'Create an account\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
   testRunner.Then("I am able to view the Error message as \'An account using this email address has a" +
                    "lready been registered. Please enter a valid password or request a new one.\' on " +
                    "\'Create an account\' form of Sign in page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view Error message when you enter only email id not password", new string[] {
                "TestCase6"}, SourceLine=31)]
        public virtual void ShouldBeAbleToViewErrorMessageWhenYouEnterOnlyEmailIdNotPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view Error message when you enter only email id not password", new string[] {
                        "TestCase6"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 33
   testRunner.Given("I enter \'Email Id\' as \'abc@g.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
    testRunner.When("I click on \'Sign in for already register user\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
   testRunner.Then("I am able to view the Error message as \'Password is required.\' on \'Sign in\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Should be able to view Success message when you enter all necessary field for cre" +
            "ating a new account", new string[] {
                "TestCase7"}, SourceLine=37)]
        public virtual void ShouldBeAbleToViewSuccessMessageWhenYouEnterAllNecessaryFieldForCreatingANewAccount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to view Success message when you enter all necessary field for cre" +
                    "ating a new account", new string[] {
                        "TestCase7"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 39
 testRunner.Given("I enter \'email id\' as \'abc278@g.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.And("I click on \'Create an account\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I enter \'First Name\' as \'John\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I enter \'Last Name\' as \'Evans\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I enter \'Password\' as \'abc@123\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And("I enter \'Address of First Name\' as \'John\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("I enter \'Address of Last Name\' as \'Evans\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("I enter \'Address\' as \'Los angels\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("I enter \'City\' as \'Los angels\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("I select \'State\' as \'Indiana\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I enter \'Post code\' as \'00045\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I select \'Country\' as \'United States\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I enter \'Mobile Number\' as \'123456789\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I enter \'Alias Address\' as \'Los angels\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I click on \'Register\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.Then("I am able to view successful message \'Welcome to your account. Here you can manag" +
                    "e all of your personal information and orders.\' for creating account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
